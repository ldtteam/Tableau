/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details on writing Custom Plugins, please refer to https://docs.gradle.org/8.10/userguide/custom_plugins.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    id 'java-gradle-plugin'
}

sourceSets {
    main {
        java {
            resources {
                srcDir 'src/main/generated'
            }
        }
    }
}

dependencies {
    api project(':scripting')
    api project(':sourceset-management')
    api libs.bundles.jetbrainsAnnotations
}

gradlePlugin {
    // Define the plugin
    plugins {
        "jetbrains-annotations" {
            id = 'com.ldtteam.tableau.jetbrains-annotations'
            implementationClass = 'com.ldtteam.tableau.jetbrains.annotations.JetbrainsAnnotationsPlugin'
        }
    }
}

tasks.register('resolveJetbrainsAnnotationsVersion') {
    doLast {
        def annotationsVersionFile = file('src/main/generated/annotations-version.tableau')
        if (annotationsVersionFile.exists()) {
            annotationsVersionFile.delete()
        } else {
            annotationsVersionFile.parentFile.mkdirs()
        }

        configurations.api.copy()
                .resolvedConfiguration
                .firstLevelModuleDependencies
                .stream()
                .filter { it.moduleGroup == 'org.jetbrains' && it.moduleName == 'annotations' }
                .findFirst()
                .ifPresentOrElse(
                        { annotationsVersionFile << it.moduleVersion },
                        { throw new GradleException("Could not find JetBrains annotations in the dependencies") }
                )
    }
}

tasks.compileJava.dependsOn tasks.resolveJetbrainsAnnotationsVersion