/*
 * This source file was generated by the Gradle 'init' task
 */
package com.ldtteam.tableau.jarjar;

import com.ldtteam.tableau.extensions.NeoGradleExtension;
import com.ldtteam.tableau.jarjar.extensions.JarJarExtension;
import com.ldtteam.tableau.neogradle.NeoGradlePlugin;
import org.gradle.api.Project;
import org.gradle.api.Plugin;
import org.gradle.api.artifacts.Configuration;
import org.jetbrains.annotations.NotNull;

public class JarJarProjectPlugin implements Plugin<Project> {

    /**
     * Name of the configuration used by the jarjar plugin that contains the dependencies to be jar-in-jar'ed.
     */
    public static final String CONTAINED_CONFIGURATION_NAME = "contained";

    @Override
    public void apply(@NotNull Project target) {
        target.getPlugins().apply(NeoGradlePlugin.class);

        NeoGradleExtension.get(target).getExtensions().create(JarJarExtension.EXTENSION_NAME, JarJarExtension.class, target);

        configureContainedConfiguration(target);
    }

    /**
     * Creates and configures the contained configuration.
     *
     * @param project the project to configure
     */
    private void configureContainedConfiguration(Project project) {
        final Configuration configuration = project.getConfigurations().maybeCreate(CONTAINED_CONFIGURATION_NAME);
        project.afterEvaluate(evaluatedProject -> {
            final JarJarExtension jarJar = JarJarExtension.get(evaluatedProject);
            configuration.setTransitive(!jarJar.getUsesNoneTransitiveJarJar().get());
        });
    }
}
